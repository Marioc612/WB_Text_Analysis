unit = 'cm',
scale = scale,
dpi = dpi)
cli_alert_success(glue(
"Plot successfully exported to the path ",
style_underline(style_italic(
col_br_red("\'{folder}/{figname}.png\'\n\n"))
)
))
} else {
cli_abort(paste0("The argument 'transparent_bg' must be ",
"either TRUE or FALSE"))
}
} else {
cli_abort("The argument 'figname' must be a single string")
}
}
export_plot(occ, 'occ', dpi = 300, plot_width = 25)
export_plot(occ, 'occ', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 18,
fontsize_title = 30,
fontsize_axis = 18,
# savefig = TRUE,
# figname = 'Test 1',
scale = 1,
dpi = 300)
export_plot(occ, 'occ', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 25,
fontsize_title = 50,
fontsize_axis = 25,
# savefig = TRUE,
# figname = 'Test 1',
scale = 1,
dpi = 300)
export_plot(occ, 'occ', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 40,
fontsize_title = 50,
fontsize_axis = 25,
# savefig = TRUE,
# figname = 'Test 1',
scale = 1,
dpi = 300)
export_plot(occ, 'occ', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 40,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'occ', dpi = 300)
library(here)
library(ggplot2)
library(ggraph)
library(tidygraph)
library(igraph)
library(showtext)
source(here('DataReader.R'))
source(here('ViewResults.R'))
source(here('AnalysisModule.R'))
# --------------------------- or Using previously pre-processed results
tidy <- from_saves('Test')
# Using test data
results <- generate_testData(tidy)
# Identifying the SDGs
results <- identify_SDGs(results)
# --------------------------- or Using previously pre-processed results
tidy <- from_saves('Test')
# --------------------------- or Using previously pre-processed results
tidy <- from_saves('Test')
source("~/GitHub/WB_Text_Analysis/DataReader.R")
source("~/GitHub/WB_Text_Analysis/DataReader.R")
# --------------------------- or Using previously pre-processed results
tidy <- from_saves('Test')
# Using test data
results <- generate_testData(tidy)
# Identifying the SDGs
results <- identify_SDGs(results)
# Binary occurrence results by SDG ---------------------> can be exported as csv
occurrence_SDG <- count_occurrence(results,
by = 'SDG',
collapse_projects = TRUE)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 40,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
initialise_fonts(dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 40,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 80,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 80,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
plot_results <- function(data,
title = NULL,
subtitle = NULL,
xlabel,
ylabel,
font = "Roboto Condensed",
fontsize_barlabs = 14,
fontsize_title = 20,
fontsize_subt = 16,
fontsize_axis = 15,
savefig = FALSE,
figname = NULL,
dpi = 96,
scale = 1,
transparent_bg = FALSE) {
fig <- ggplot(data,
aes(fct_rev(fct_reorder(SDG, Frequency)), Frequency)) +
geom_col(aes(fill = Color)) +
geom_text(
aes(SDG, Frequency, label = Frequency),
angle = 90,
vjust = 0.35,
hjust = 1.3,
colour = 'white',
size = fontsize_barlabs
) +
scale_fill_identity() +
ggtitle(title, subtitle) +
xlab(xlabel) +
ylab(ylabel) +
theme_minimal() +
theme(
aspect.ratio = 0.4,
axis.title.x = element_text(size = fontsize_axis,
margin = margin(15, 0, 0, 0)),
axis.title.y = element_text(size = fontsize_axis,
margin = margin(0, 15, 0, 0)),
axis.text.x = element_text(angle = 90,
vjust = 0.5,
hjust = 0,
size = fontsize_axis),
axis.text.y = element_text(size = fontsize_axis),
legend.position = 'none',
plot.title = element_text(size = fontsize_title,
face = 'bold',
hjust = 0,
margin = margin(0, 0, 0, 0),
family = 'Roboto Condensed'),
plot.subtitle = element_text(size = fontsize_subt,
hjust = 0,
margin = margin(0, 0, 25, 0)),
)
return(fig)
}
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 80,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
export_plot(occ, 'a', dpi = 300, fontsize_barlabs = 30)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 30,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300, fontsize_barlabs = 30)
export_plot(occ, 'a', dpi = 300)
export_plot(occ, 'a', dpi = 300, fontsize_barlabs = 23)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 25,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 20,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 15,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 15,
fontsize_title = 50,
fontsize_axis = 25,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
source("~/GitHub/WB_Text_Analysis/ViewResults.R")
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 15,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 300)
export_plot(occ, 'a', dpi = 300)
[8:13 p. m.] Mario CÃ¡rdenas
readRDS(file.path(find.package('showtext'), 'Meta', 'package.rds'))$Built$R
results <- identify_SDGs(results)
# Total matches by project -------------------------------> can feed a histogram
matches_T <- count_matches(results,
by = 'total_matches',
sorted = 'Frequency')
# Total matches by Project and SDG ---------------------> can feed a column plot
matches_SDG <- count_matches(results,
by = 'SDG',
sorted = 'Frequency',
collapse_projects = TRUE)
# Total matches by Project and Target ------------------> can be exported as csv
matches_tgt <- count_matches(results,
by = 'Target',
sorted = 'Frequency',
collapse_projects = TRUE)
# Binary occurrence results by SDG ---------------------> can be exported as csv
occurrence_SDG <- count_occurrence(results,
by = 'SDG',
collapse_projects = TRUE)
# Identify the main SDG in each project. From binary == TRUE identifies the main
# SDG with the sum of the binary frequencies (presence or absence of a target)
# of all targets in a SDG.
# -------------------------------> can feed a column plot and be exported to csv
main_SDGs <- get_main_SDG(results,
from_binary = FALSE,
collapse_SDG = FALSE)
SDGs_proj <- get_SDGs_proj(results)
# Results as matrix ------------------------------------------------------------
matrix_relative <- results_matrix(results,
relative_freqs = TRUE,
with_main_SDG = TRUE)
matrix_absolute <- results_matrix(results,
relative_freqs = FALSE,
with_main_SDG = TRUE)
net <- generate_network(results)
occ <- occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 15,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 300)
occ
initialise_fonts(dpi = 96)
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 15,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 300)
occ
initialise_fonts(dpi = 96)
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 10,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 300)
occ
initialise_fonts(dpi = 96)
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 10,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 96)
occ
initialise_fonts(dpi = 96)
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 10,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1.5,
dpi = 96)
initialise_fonts(dpi = 96)
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 10,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 96)
initialise_fonts(dpi = 300)
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 10,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 96)
R.version()
R.Version()
initialise_fonts()
occurrence_SDG %>% plot_results(
title = 'Testing',
xlabel = 'SDG',
ylabel = 'Number of projects',
fontsize_barlabs = 10,
fontsize_title = 50,
fontsize_axis = 30,
scale = 1,
dpi = 96)
histo <- results %>% plot_SDG_distribution(
binwidth = 2,
title = "Testing 3",
test = TRUE)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Testing 3",
test = TRUE)
library(cli)
library(ggplot2)
library(ggraph)
library(glue)
library(here)
library(igraph)
library(jsonlite)
library(pdftools)
library(readr)
library(showtext)
library(sysfonts)
library(tidygraph)
library(tidytext)
library(tidyverse)
source(here('DataReader.R'), local = knitr::knit_global())
source(here('ViewResults.R'), local = knitr::knit_global())
source(here('AnalysisModule.R'), local = knitr::knit_global())
initialise_fonts()
tidy <- from_saves('Test')
results <- generate_testData(tidy)
results <- identify_SDGs(results)
# Total matches by project -------------------------------> can feed a histogram
matches_T <- count_matches(results,
by = 'total_matches',
sorted = 'Frequency')
# Total matches by Project and SDG ---------------------> can feed a column plot
matches_SDG <- count_matches(results,
by = 'SDG',
sorted = 'Frequency',
collapse_projects = TRUE)
# Total matches by Project and Target ------------------> can be exported as csv
matches_tgt <- count_matches(results,
by = 'Target',
sorted = 'Frequency',
collapse_projects = TRUE)
# Binary occurrence results by SDG ---------------------> can be exported as csv
occurrence_SDG <- count_occurrence(results,
by = 'SDG',
collapse_projects = TRUE)
# Identify the main SDG in each project. From binary == TRUE identifies the main
# SDG with the sum of the binary frequencies (presence or absence of a target)
# of all targets in a SDG.
# -------------------------------> can feed a column plot and be exported to csv
main_SDGs <- get_main_SDG(results,
from_binary = FALSE,
collapse_SDG = FALSE)
SDGs_proj <- get_SDGs_proj(results)
# Results as matrix ------------------------------------------------------------
matrix_relative <- results_matrix(results,
relative_freqs = TRUE,
with_main_SDG = TRUE)
matrix_absolute <- results_matrix(results,
relative_freqs = FALSE,
with_main_SDG = TRUE)
net <- generate_network(results)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs mapped by project",
test = TRUE,
fontsize_title = 50,
fontsize_axis = 30,
dpi = 96)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs mapped by project",
test = TRUE,
fontsize_title = 30,
fontsize_axis = 30,
dpi = 96)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs mapped by project",
test = TRUE,
fontsize_title = 35,
fontsize_axis = 20,
dpi = 96)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs\nmapped by project",
test = TRUE,
fontsize_title = 35,
fontsize_axis = 20,
dpi = 96)
source("~/GitHub/WB_Text_Analysis/ViewResults.R")
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs\nmapped by project",
test = TRUE,
fontsize_title = 35,
fontsize_axis = 20,
dpi = 96)
source("~/GitHub/WB_Text_Analysis/ViewResults.R")
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs\nmapped by project",
test = TRUE,
fontsize_title = 35,
fontsize_axis = 20,
dpi = 96)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs",
subtitle = "mapped by project",
test = TRUE,
fontsize_title = 35,
fontsize_subtitle = 25,
fontsize_axis = 20,
dpi = 96)
results %>% plot_SDG_distribution(
binwidth = 2,
title = "Distribution of the number of SDGs",
subtitle = "mapped by project",
test = TRUE,
fontsize_title = 35,
fontsize_subt = 25,
fontsize_axis = 20,
dpi = 96)
plot_network(results)
